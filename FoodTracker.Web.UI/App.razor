@using Microsoft.AspNetCore.Components.Authorization
@using FoodTracker.Web.UI.Layout
@inject NavigationManager navMan;

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeView>
                <Authorized>
                    <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                </Authorized>
                <NotAuthorized>
                    <FoodTracker.Web.UI.Redirects.RedirectToLogin></FoodTracker.Web.UI.Redirects.RedirectToLogin>
                    @{
                        if (navMan.Uri.Contains("/login"))
                        {
                            <FoodTracker.Web.UI.Pages.Login></FoodTracker.Web.UI.Pages.Login>
                        }
                        else if (navMan.Uri.Contains("/register"))
                        {
                            <FoodTracker.Web.UI.Pages.Register></FoodTracker.Web.UI.Pages.Register>
                        }
                    }
                </NotAuthorized>
            </AuthorizeView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(LoginLayout)">
                <h1 class="title">Sorry, there's nothing at this address.</h1>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>